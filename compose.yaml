services:
  mysqldb:
    image: mysql:8.0
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: finance_app
      MYSQL_USER: server
      MYSQL_PASSWORD: 1234
    volumes:
      - db-data:/var/lib/mysql #volume condiviso
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql #script di inizializzazione
    ports:
      - 3307:3306 #porta host:porta container

  server:
    build:
      dockerfile: Dockerfile.server
    environment:
      - MYSQL_HOST=mysqldb
      - MYSQL_PORT=3306
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=finance_app
      - MYSQL_USER=server
      - MYSQL_PASSWORD=1234
    ports:
      - "50051:50051"
    depends_on:
      - mysqldb
    restart: always

  datacollector:
    build:
      dockerfile: Dockerfile.data_collector
    environment:
      - MYSQL_HOST=mysqldb
      - MYSQL_PORT=3306
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=finance_app
      - MYSQL_USER=server
      - MYSQL_PASSWORD=1234
    depends_on:
      - mysqldb
    restart: always

  alertsystem:
    build:
      dockerfile: Dockerfile.alert_system
    environment:
      - MYSQL_HOST=mysqldb
      - MYSQL_PORT=3306
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=finance_app
      - MYSQL_USER=server
      - MYSQL_PASSWORD=1234
    depends_on:
      - mysqldb
    restart: always
  
  alertnotifiersystem:
    build:
      dockerfile: Dockerfile.alert_notifier_system
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest #cp = confluent platform
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000  #unità di tempo centralizzata
    ports:
      - "2181:2181"
  
  schema-registry:  #controlla che il formato dei messaggi sia corretto, è attivo
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181' #URL di connessione a zookeeper
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,PLAINTEXT_INTERNAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  kafka-broker-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-2
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  kafka-broker-3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-3
    ports:
      - "39092:39092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,PLAINTEXT_INTERNAL://localhost:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

volumes:
  db-data:
  